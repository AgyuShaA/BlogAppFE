// Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// ------------------------------
/// TILE CATALOG
/// ------------------------------

model Tile {
  id              Int             @id @default(autoincrement())
  name            String
  imageUrl        String?

  collectionId    Int?
  surfaceId       Int?
  outdoorIndoorId Int?

  collection      Collection?     @relation(fields: [collectionId], references: [id])

  surface         Surface?        @relation(fields: [surfaceId], references: [id])
  outdoorIndoor   OutdoorIndoor?  @relation(fields: [outdoorIndoorId], references: [id])

  colors          TileColor[]     // Many-to-many
  features        TileFeature[]   // Many-to-many
    sizes           TileSize[]      // Many-to-many

}

/// ------------------------------
/// ATTRIBUTE TABLES (filters)
/// ------------------------------

model Collection {
  id    Int    @id @default(autoincrement())
  name  String @unique
  tiles Tile[]
}

model Size {
  id    Int    @id @default(autoincrement())
  name  String @unique
  tiles TileSize[]
}

model Surface {
  id    Int    @id @default(autoincrement())
  name  String @unique
  tiles Tile[]
}

model OutdoorIndoor {
  id    Int    @id @default(autoincrement())
  name  String @unique
  tiles Tile[]
}

model Color {
  id    Int    @id @default(autoincrement())
  name  String @unique
  hex   String @unique
  tiles TileColor[]
}

model Feature {
  id    Int    @id @default(autoincrement())
  name  String @unique
  tiles TileFeature[]
}

/// ------------------------------
/// MANY-TO-MANY JOIN TABLES
/// ------------------------------

model TileColor {
  tileId  Int
  colorId Int
  tile    Tile  @relation(fields: [tileId], references: [id])
  color   Color @relation(fields: [colorId], references: [id])

  @@id([tileId, colorId])
}

model TileFeature {
  tileId    Int
  featureId Int
  tile      Tile    @relation(fields: [tileId], references: [id])
  feature   Feature @relation(fields: [featureId], references: [id])

  @@id([tileId, featureId])
}

model TileSize {
  tileId Int
  sizeId Int
  tile   Tile @relation(fields: [tileId], references: [id])
  size   Size @relation(fields: [sizeId], references: [id])

  @@id([tileId, sizeId])
}
